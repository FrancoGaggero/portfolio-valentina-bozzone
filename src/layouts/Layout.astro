---
export interface Props {
	title?: string;
}

const { title = "Valentina Bozzone - Fashion Producer & Community Manager" } = Astro.props;
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Portfolio de Valentina Bozzone - Productora de Moda y Community Manager" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>{title}</title>
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;600;700&family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
	</head>
	<body class="bg-white text-black overflow-x-hidden">
		<slot />
		
		<script>
			document.addEventListener('DOMContentLoaded', () => {
				// Parallax and fade effects on scroll
				window.addEventListener('scroll', () => {
					const scrolled = window.pageYOffset;
					
					// Parallax for images
					const images = document.querySelectorAll('.parallax-image');
					images.forEach((img: Element) => {
						const htmlImg = img as HTMLElement;
						const speed = 0.5;
						const yPos = -(scrolled * speed);
						htmlImg.style.transform = `translateY(${yPos}px)`;
					});
				});

				// Intersection Observer for animations
				const observerOptions = {
					threshold: 0.2,
					rootMargin: '0px 0px -100px 0px'
				};

				const observer = new IntersectionObserver((entries) => {
					entries.forEach(entry => {
						if (entry.isIntersecting) {
							entry.target.classList.add('animate-in');
						}
					});
				}, observerOptions);

				// Observe all fade-in elements
				document.querySelectorAll('.fade-in').forEach(el => {
					observer.observe(el);
				});
			});
		</script>

		<style is:global>
			* {
				margin: 0;
				padding: 0;
				box-sizing: border-box;
			}

			body {
				font-family: 'Inter', sans-serif;
				font-weight: 300;
			}

			.font-display {
				font-family: 'Playfair Display', serif;
			}

			.fade-in {
				opacity: 0;
				transform: translateY(50px);
				transition: all 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
			}

			.animate-in {
				opacity: 1;
				transform: translateY(0);
			}

			/* Elegant scrollbar */
			::-webkit-scrollbar {
				width: 2px;
			}

			::-webkit-scrollbar-track {
				background: transparent;
			}

			::-webkit-scrollbar-thumb {
				background: #000;
				border-radius: 1px;
			}

			/* Smooth transitions for all elements */
			* {
				transition: color 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;
			}

			/* Remove default button styles */
			button {
				border: none;
				background: none;
				cursor: pointer;
			}

			/* Beautiful focus states */
			a:focus, button:focus, input:focus, textarea:focus {
				outline: 1px solid #000;
				outline-offset: 2px;
			}
		</style>
	</body>
</html>
